# Default values for webresourcecatalogus.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

config:
  version: V1.0
  debug: 0
  cache: true
  internal: false
  env: prod
  trustedHosts: "^.+$"
  corsAllowOrigin: [ "*" ]
  trustedProxies:
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16

security:
  applicationKey: "45c1a4b6-59d3-4a6e-86bf-88a872f35845"
  secret: ""
  jwt:
    id:
    privateKey:
  dependencies:
    brp:
      apikey: 45c1a4b6-59d3-4a6e-86bf-88a872f35845
      auth: apikey
      location: http://brpservice
      accept: application/hal+json
    wari:
      apikey: 45c1a4b6-59d3-4a6e-86bf-88a872f35845
      auth: apikey
      location: http://waardepapieren-register

replicaCount: 2

php:
  repository: ghcr.io/conductionnl/webresourcecatalogus-php
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
  resources: {}
    # As per helm best practise, we do not enable these values by default,
    # although we do provide optimal values in the lines below that can be uncommented
    # limits:
    #   cpu: 40m
    #   memory: 128Mi
    # requests:
    #   cpu: 20m
    #   memory: 72Mi

nginx:
  repository: ghcr.io/conductionnl/webresourcecatalogus-nginx
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
  resources: { }
    # As per helm best practise, we do not enable these values by default,
    # although we do provide optimal values in the lines below that can be uncommented
    # limits:
    #   cpu: 40m
    #   memory: 128Mi
    # requests:
    #   cpu: 20m
    #   memory: 72Mi

redis:
  enabled: false
  architecture: standalone
  redisPort: 6379
  auth:
    enabled: false
  pullPolicy: IfNotPresent

postgresql:
  enabled: true
  # If plugging in an external postgresql provider, the full url to use
  url: ''
  image:
    tag: 11
    pullPolicy: IfNotPresent
  postgresqlUsername: 'webresourcecatalogus'
  postgresqlPassword: '!ChangeMe!'
  postgresqlDatabase: 'webresourcecatalogus'
  # Persistent Volume Storage configuration.
  # ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  persistence:
    enabled: true
  tls:
    enabled: false
    autoGenerated: false
  volumePermissions:
    enabled: true

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
#  Differs per cluster provider. Uncomment the following lines for use on Azure
#  privileged: false
#  readOnlyRootFilesystem: true
#  allowPrivilegeEscalation: false
#  runAsNonRoot: true
#  runAsUser: 1000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  annotations: {}
  port: 80

ingress:
  enabled: false
  className: "nginx"
  hostname: webresourcecatalogus.local
  path: /
  pathType: ImplementationSpecific
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local



autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
